-- test huge transactions
SELECT * FROM spock_regress_variables()
\gset
\c :provider_dsn
-- lots of small rows replication with DDL outside transaction
SELECT spock.replicate_ddl($$
	CREATE TABLE public.a_huge (
		id integer primary key,
                id1 integer,
		data text default 'data',
		data1 text default 'data1'
	);
$$);
 replicate_ddl 
-----------------------
 t
(1 row)

SELECT * FROM spock.repset_add_table('default', 'a_huge');
 repset_add_table 
-----------------------
 t
(1 row)

SELECT spock.wait_slot_confirm_lsn(NULL, NULL);
 wait_slot_confirm_lsn 
-----------------------
 
(1 row)

BEGIN;
INSERT INTO public.a_huge VALUES (generate_series(1, 20000000), generate_series(1, 20000000));
COMMIT;
SELECT spock.wait_slot_confirm_lsn(NULL, NULL);
 wait_slot_confirm_lsn 
-----------------------
 
(1 row)

\c :subscriber_dsn
SELECT count(*) FROM a_huge;
  count   
----------
 20000000
(1 row)

\dtS+ a_huge;
                     List of relations
 Schema |  Name  | Type  |  Owner   |  Size  | Description 
--------+--------+-------+----------+--------+-------------
 public | a_huge | table | postgres | 996 MB | 
(1 row)

\c :provider_dsn
-- lots of small rows replication with DDL within transaction
BEGIN;
SELECT spock.replicate_ddl($$
	CREATE TABLE public.b_huge (
		id integer primary key,
                id1 integer,
		data text default 'data',
		data1 text default 'data1'
	);
$$);
 replicate_ddl 
-----------------------
 t
(1 row)

SELECT * FROM spock.repset_add_table('default', 'b_huge');
 repset_add_table 
-----------------------
 t
(1 row)

INSERT INTO public.b_huge VALUES (generate_series(1,20000000), generate_series(1,20000000));
COMMIT;
SELECT spock.wait_slot_confirm_lsn(NULL, NULL);
 wait_slot_confirm_lsn 
-----------------------
 
(1 row)

\c :subscriber_dsn
SELECT count(*) FROM b_huge;
  count   
----------
 20000000
(1 row)

\dtS+ b_huge;
                     List of relations
 Schema |  Name  | Type  |  Owner   |  Size  | Description 
--------+--------+-------+----------+--------+-------------
 public | b_huge | table | postgres | 996 MB | 
(1 row)

\c :provider_dsn
\set VERBOSITY terse
SELECT spock.replicate_ddl($$
	DROP TABLE public.a_huge CASCADE;
	DROP TABLE public.b_huge CASCADE;
$$);
NOTICE:  drop cascades to 1 other object
NOTICE:  drop cascades to 1 other object
 replicate_ddl 
-----------------------
 t
(1 row)

SELECT spock.wait_slot_confirm_lsn(NULL, NULL);
 wait_slot_confirm_lsn 
-----------------------
 
(1 row)

